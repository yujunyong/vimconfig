"***********************************************************************
" ===> Vundle.vim Plugin 管理
"***********************************************************************
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
if !WINDOWS()
	set rtp+=~/.vim/bundle/Vundle.vim
	call vundle#begin()
else
	set rtp+=~/vimfiles/bundle/Vundle.vim/
	let path='~/vimfiles/bundle'
	call vundle#begin(path)
endif
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.

" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'

" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'

" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'

" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" Avoid a name conflict with L9
" Plugin 'user/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line

" ---> vim界面
"*************************************************
" 显示以空格缩进的线
Plugin 'Yggdroot/indentLine'

" vim 的theme
Plugin 'altercation/vim-colors-solarized'

" js语法高亮
Plugin 'JavaScript-syntax'

" velocity语法高亮
Plugin 'lepture/vim-velocity'

" markdown语法高亮
Plugin 'plasticboy/vim-markdown'

" less语法高亮
Plugin 'groenewege/vim-less'

" 状态栏加强，美化
Plugin 'bling/vim-airline'

" 在terminal下,不同模式中改变光标的形状
" Plugin 'jszakmeister/vim-togglecursor'

" ---> 效率
"*************************************************
" js语法，规范检察工具
Plugin 'Shutnik/jshint2.vim'

" 格式化代码工具
" Plugin 'editorconfig/editorconfig-vim'

" 快速编写html，css的代码
Plugin 'mattn/emmet-vim'

" xml document tag completion and tag jumping.
Plugin 'sukima/xmledit'

" 代码自动补全
" Plugin 'Valloric/YouCompleteMe'

" 编辑选中字符的两边符号
Plugin 'tpope/vim-surround'

" 添加注释
Plugin 'tpope/vim-commentary'

" 扩展'.'命令，支持surround.vim, commentary.vim
Plugin 'tpope/vim-repeat'

" 代码对齐
Plugin 'godlygeek/tabular'

" awk文本分析处理
Plugin 'tejr/vawk'

" 在insert-modes, command-line modes在绑定emacs快捷键
Plugin 'maxbrunsfeld/vim-emacs-bindings'

" 整合ack
Plugin 'Ack.vim'

" 浏览代码的方法，变量
" Plugin 'taglist.vim'

" 浏览文件
Plugin 'The-NERD-tree'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"***********************************************************************
" ===> Plugin 配置
"***********************************************************************

" ---> jshint2 配置
"*************************************************
" set JSHint command path if it installed locally
let jshint2_command='/usr/local/bin/jshint'

" Lint JavaScript files after reading it
" let jshint2_read=1

" Lint JavaScript files after saving it
" let jshint2_save=1

" Do not automatically close orphaned error lists
let jshint2_close=0

" Skip lint confirmation for non JavaScript files
let jshint2_confirm=0

" Do not use colored messages
" let jshint2_color=0

" Hide error codes in error list (if you don't use error ignoring or error codes confuses you)
let jshint2_error=0

" Set default height of error list
let jshint2_height=20

" ---> indentLine 配置
"*************************************************
let g:indentLine_color_term=239
let g:indentLine_char='|'

" ---> JavaScript syntax 配置
"*************************************************
" 打开javascript折叠
let b:javascript_fold=1

" 打开javascript对dom、html和css的支持
let javascript_enable_domhtmlcss=1

" ---> bling/vim-airline 配置
"*************************************************
if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif

let g:airline_left_sep = ''
let g:airline_right_sep = ''

" ---> vim-surround 配置
"*************************************************
" let g:surround_37="{% \r %}"
" let g:surround_123="{{ \r }}"

